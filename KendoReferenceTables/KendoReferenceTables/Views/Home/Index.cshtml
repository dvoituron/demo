@model KendoUIMVC5.Controllers.ReferenceTablesModel

@(Html.Kendo().DropDownListFor(model => model.SelectedTableName)
          .Name("cboListOfReferenceTables")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetTables", "Home");
              });
          })
         .HtmlAttributes(new { style = "width: 100%" })
)

@(Html.Kendo().Grid<dynamic>()
    .Name("gridReferenceTableContent")
    .Columns(columns =>
    {
        // Format Date and Boolean
        foreach (System.Data.DataColumn column in Model.DataTable.Columns)
        {
            var boundedColumn = columns.Bound(column.ColumnName);

            if (column.DataType == typeof(DateTime))
                boundedColumn.Format("{0:dd/MM/yyyy}");
            else if (column.DataType == typeof(Boolean))
                boundedColumn.ClientTemplate("<input type='checkbox' onclick='return false;' onkeydown='return false;' #if (" + column.ColumnName + ") { #checked='checked'# } #/>");
        }

        // Add an Edit button
        columns.Command(cmd => cmd.Edit());
        columns.Command(cmd => cmd.Destroy());
    })
    .Pageable()
    .Sortable()
    .Resizable(resize => resize.Columns(true))
    .ToolBar(toolbar => toolbar.Create())
    .Editable(ed => ed.Mode(GridEditMode.PopUp))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            var id = Model.DataTable.PrimaryKey[0].ColumnName;
            model.Id(id);
            foreach (System.Data.DataColumn column in Model.DataTable.Columns)
            {
                if (column.ColumnName == id)
                {
                    //model.Field(column.ColumnName, column.DataType).Editable(false);
                }
            }
        })
        .Read(read => read.Action("Read", "Home"))
        .Update(update => update.Action("Update", "Home"))
        .Destroy(delete => delete.Action("Delete", "Home"))
        .Create(add => add.Action("Add", "Home"))
        .Events(events => events.Error("onError"))
    )
)

<script type="text/javascript">

    function onError(e, status) {
        // Display error message
        if (e.status == "customerror") {
            alert(e.errors);
        }
        else {
            alert("Generic server error.");
        }
        // cancel grid rebind if error occurs
        var grid = $("#gridReferenceTableContent").data("kendoGrid");
        grid.one("dataBinding", function (e) {
            e.preventDefault();
        });
    }

    function onEdit(e) {
        // In Edit mode, disable all primary key field
        if (!e.model.isNew()) {
            @foreach (var key in Model.DataTable.PrimaryKey) {
                @: document.getElementsByName('@key')[0].setAttribute('readonly', 'readonly');
                                                }
        }

        // Define default empty value (except for primary key)
        if (e.model.isNew()) {
            @foreach (System.Data.DataColumn col in Model.DataTable.Columns)
            {
                @: e.model.set('@col.ColumnName', '');
                                                            }
        }
    }

    $(document).ready(function () {
        var grid = $("#gridReferenceTableContent").data("kendoGrid").bind("edit", onEdit);
    });
</script>
